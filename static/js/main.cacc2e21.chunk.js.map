{"version":3,"sources":["methods.js","AppEmail.js","AppAccounts.js","AppTitle.js","AppNotification.js","AppDrawerBox.js","AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["getRandomNum","initialNum","Math","floor","random","emailNum","menuEmailArr","fetch","then","response","json","data","results","forEach","quoteObj","console","log","author","content","AppEmail","memo","useState","anchorEl","setAnchorEl","undoneEmail","setUndoneEmail","handleMenu","useCallback","event","currentTarget","handleClose","IconButton","size","edge","color","sx","mr","onClick","Badge","badgeContent","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","item","idx","MenuItem","AppAccounts","React","AppTitle","Typography","variant","component","flexGrow","notificationNum","menuNotArr","AppNotification","undoneNotification","setUndoneNotification","AppDrawerBox","anchor","top","left","bottom","right","state","setState","toggleDrawer","type","key","Fragment","SwipeableDrawer","onOpen","Box","width","role","onKeyDown","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","MyAppBar","AppBar","position","Toolbar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cacc2e21.chunk.js","sourcesContent":["\r\nexport const getRandomNum = (initialNum) => {\r\n  return Math.floor(Math.random()*(initialNum));\r\n}\r\n\r\nexport const getArr1toNum = (num) => {\r\n  const initialArr = [];\r\n\r\n  for(let i=1; i<=num; i++){\r\n    initialArr.push(i)\r\n  }\r\n\r\n  return initialArr;\r\n}\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport { Badge, Menu, MenuItem } from '@mui/material';\r\nimport { getRandomNum } from './methods'\r\n\r\n\r\nconst emailNum = getRandomNum(10);\r\nlet menuEmailArr = [];\r\n\r\nfetch(`https://api.quotable.io/quotes?limit=${emailNum}&maxLength=40&page=1`)\r\n  .then((response) => response.json())\r\n  .then((data) => {\r\n    data.results.forEach(quoteObj => {\r\n      console.log(quoteObj)\r\n      menuEmailArr = [...menuEmailArr, {\"author\": `${quoteObj.author}`, \"content\": `${quoteObj.content}`}];\r\n    })\r\n  });\r\n\r\nconst AppEmail = memo(() => {\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const [undoneEmail, setUndoneEmail] = useState(emailNum);\r\n\r\n  const handleMenu = useCallback((event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setUndoneEmail(0);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n        sx={{ mr: 2 }}\r\n        onClick={handleMenu}\r\n      >\r\n        <Badge badgeContent={undoneEmail} color=\"error\">\r\n          <EmailIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <Menu\r\n        id=\"email-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {\r\n          menuEmailArr.map((item, idx) => {\r\n            return <MenuItem key={idx} onClick={handleClose}>\r\n              {item.content}\r\n              <br />\r\n              - {item.author}\r\n            </MenuItem>\r\n          })\r\n        }\r\n      </Menu>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default AppEmail;","import React, { useCallback } from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { Menu, MenuItem } from '@mui/material';\r\n\r\nconst AppAccounts = () => {\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleMenu = useCallback((event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n        sx={{ mr: 2 }}\r\n        onClick={handleMenu}\r\n        >\r\n        <AccountCircleIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"account-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>Manage Account</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppAccounts;\r\n\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst AppTitle = () => {\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n        DEMO\r\n      </Typography>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default AppTitle;\r\n\r\n","\r\nimport React, { memo, useCallback, useState } from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport { Badge, Menu, MenuItem } from '@mui/material';\r\nimport { getRandomNum } from './methods'\r\n\r\nconst notificationNum = getRandomNum(10);\r\nlet menuNotArr = [];\r\n\r\nfetch(`https://api.quotable.io/quotes?limit=${notificationNum}&maxLength=40&page=1`)\r\n  .then((response) => response.json())\r\n  .then((data) => {\r\n    data.results.forEach(quoteObj => {\r\n      console.log(quoteObj)\r\n      menuNotArr = [...menuNotArr, {\"author\": `${quoteObj.author}`, \"content\": `${quoteObj.content}`}];\r\n    })\r\n  });\r\n\r\nconst AppNotification = memo(() => {\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [undoneNotification, setUndoneNotification] = useState(notificationNum);\r\n\r\n  const handleMenu = useCallback((event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setUndoneNotification(0);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n        sx={{ mr: 2 }}\r\n        onClick={handleMenu}\r\n        >\r\n        <Badge badgeContent={undoneNotification} color=\"error\">\r\n          <NotificationsIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <Menu\r\n        id=\"notification-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {\r\n          menuNotArr.map((item, idx) => {\r\n            return <MenuItem key={idx} onClick={handleClose}>\r\n              {item.content}\r\n              <br />\r\n              - {item.author}\r\n            </MenuItem>\r\n          })\r\n        }\r\n      </Menu>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default AppNotification;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { IconButton } from '@mui/material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n\r\nexport const AppDrawerBox = () => {\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {['Profile', 'Manage Account'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index === 0 ? <AccountCircleIcon /> : <ManageAccountsIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['Email', 'Notification'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index === 0 ? <EmailIcon /> : <NotificationsIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['Logout'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              <LogoutIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment key={'left'}>\r\n        <IconButton\r\n          size=\"large\"\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          sx={{ mr: 2 }}\r\n          onClick={toggleDrawer('left', true)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <SwipeableDrawer\r\n          anchor={'left'}\r\n          open={state['left']}\r\n          onClose={toggleDrawer('left', false)}\r\n          onOpen={toggleDrawer('left', true)}\r\n        >\r\n          {list('left')}\r\n        </SwipeableDrawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nimport AppEmail from './AppEmail';\r\nimport AppAccounts from './AppAccounts';\r\nimport AppTitle from './AppTitle';\r\nimport AppNotification from './AppNotification';\r\nimport { AppDrawerBox } from './AppDrawerBox';\r\n\r\nconst MyAppBar = () => {\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <AppDrawerBox />\r\n          <AppTitle />\r\n          <AppEmail />\r\n          <AppNotification />\r\n          <AppAccounts />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n\r\n}\r\n\r\nexport default MyAppBar;","import MyAppBar from './AppBar';\n\n\nconst App = () => {\n  return (\n    <MyAppBar />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}